---
interface Props {
  type?: "submit" | "reset" | "button" | null;
  size?: "sm" | "md" | "lg" | "icon";
  block?: boolean;
  style?:
    | "primary"
    | "secondary"
    | "outline"
    | "destructive"
    | "ghost"
    | "link";
  class?: string;
  [x: string]: any;
}

const {
  type = "button",
  size = "md",
  style = "primary",
  block,
  class: className,
  ...rest
} = Astro.props;

const sizes = {
  sm: "h-8 rounded-md px-3 text-xs",
  md: "h-9 px-4 py-2",
  lg: "h-10 rounded-md px-8",
  icon: "h-9 w-9",
};

const styles = {
  primary: "bg-primary text-primary-foreground shadow hover:bg-primary/90",
  secondary:
    "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
  outline:
    "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
  destructive:
    "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
  ghost: "hover:bg-accent hover:text-accent-foreground",
  link: "text-primary underline-offset-4 hover:underline",
};
---

<button
  type={type}
  {...rest}
  class:list={[
    `focus-visible:ring-ring inline-flex items-center justify-center
    whitespace-nowrap rounded-md text-sm font-medium transition-colors
    focus-visible:outline-none focus-visible:ring-1 disabled:pointer-events-none
    disabled:opacity-50`,
    block && "w-full",
    sizes[size],
    styles[style],
    className,
  ]}
  ><slot />
</button>
